name: CD Production - User Service

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  validate-release:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Release
        run: |
          # Check if release tag exists
          if [ -z "${{ github.event.release.tag_name }}" ]; then
            echo "❌ No release tag found"
            exit 1
          fi
          
          # Validate release notes
          if [ -z "${{ github.event.release.body }}" ]; then
            echo "⚠️ Warning: No release notes provided"
          fi

      - name: Login to GHCR
        run: echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull Release Image
        run: docker pull ghcr.io/nervus-tech/nervus-user:${{ github.event.release.tag_name }}

      - name: Security Scan (Trivy)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/nervus-tech/nervus-user:${{ github.event.release.tag_name }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          vuln-type: 'os,library'
          ignore-unfixed: true

      - name: Upload Trivy Scan Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  deploy-production:
    needs: validate-release
    runs-on: ubuntu-latest
    # environment removed to avoid linter issues; can be added in repo environments if needed
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Infrastructure
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            # Ensure infrastructure is running
            cd /opt/nervus.tech/nervus-infrastructure
            docker-compose -f docker-compose-prod.yml up -d
            
            # Wait for infrastructure to be ready
            sleep 60
            
            # Verify infrastructure health
            docker-compose -f docker-compose-prod.yml ps

      - name: Deploy Service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            # Navigate to service directory
            cd /opt/nervus.tech/nervus-user
            
            # Pull latest changes
            git pull origin main
            
            # Stop existing service
            docker-compose -f user/docker-compose-prod.yml down || true
            
            # Pull specific release image
            docker pull ghcr.io/nervus-tech/nervus-user:${{ github.event.release.tag_name }}
            
            # Start service
            docker-compose -f user/docker-compose-prod.yml up -d
            
            # Wait for service to be healthy
            sleep 45
            
            # Health check
            curl -f http://localhost:8107/actuator/health || exit 1

      - name: Smoke Tests
        run: |
          # Run smoke tests against production
          curl -f http://${{ secrets.PRODUCTION_HOST }}:8107/actuator/health || exit 1

      - name: Notify Deployment
        if: success()
        run: |
          echo "✅ Production deployment successful for nervus-user"
